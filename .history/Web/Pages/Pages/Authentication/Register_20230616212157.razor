@page "/pages/authentication/register"
@layout LoginLayout

<MudText Typo="Typo.h4" GutterBottom="true">Sign Up</MudText>
<!-- Heading for the Sign Up page -->

<MudText>Already have an account? <MudLink Href="/pages/authentication/login">Sign In</MudLink></MudText>
<!-- Text with a link to the Sign In page -->

<MudTextField T="string" Label="Username" Variant="Variant.Outlined" Class="my-4"></MudTextField>
<!-- Text field for the user's username -->

<MudTextField T="string" Label="E-mail" Variant="Variant.Outlined"></MudTextField>
<!-- Text field for the user's email address -->

<MudTextField @bind-Value="@Password" Label="Password" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordVisibility" Class="mt-4"/>
<!-- Text field for the user's password with support for toggling password visibility -->

<MudCheckBox @bind-Checked="@AgreeToTerms" Label="I agree to the terms and privacy" Color="Color.Primary" Class="ml-n1 my-3"></MudCheckBox>
<!-- Checkbox for the user to agree to the terms and privacy -->

<MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!AgreeToTerms)" Link="/pages/authentication/login" Size="Size.Large" FullWidth="true">Register</MudButton>
<!-- Button to register the user, disabled if the user hasn't agreed to the terms -->

@code {
    string Password { get; set; } // Represents the user's password
    public bool AgreeToTerms { get; set; } // Indicates whether the user has agreed to the terms

    bool PasswordVisibility; // Indicates whether the password is visible or hidden
    InputType PasswordInput = InputType.Password; // Input type for the password field
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff; // Icon for the password visibility toggle

    void TogglePasswordVisibility()
    {
        // Toggles the password visibility and updates the input type and icon accordingly
        if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}
